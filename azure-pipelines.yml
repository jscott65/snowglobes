jobs:
- job: linux
  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 3

  variables:
    CIBW_SKIP: cp27 cp34
    CIBW_BUILD_VERBOSITY: 3
    CIBW_BEFORE_BUILD: |
      yum install -y gsl-devel && pip install .
      curl https://www.mpi-hd.mpg.de/personalhomes/globes/download/globes-3.2.17.tar.gz | tar xvz
      cd globes-3.2.17
      ./configure
      make
      make install
      ldconfig
      echo $PATH
      globes-config --include
      pip install cffi

  steps:

  - task: UsePythonVersion@0
    displayName: set python version
    inputs:
      versionSpec: '$(python.version)' #'3.x'
      addToPath: true

#- bash: sudo apt-get update && sudo apt-get install -y libgsl-dev
#  workingDirectory: $(System.DefaultWorkingDirectory)
#  displayName: download and update libgsl-dev
#  failOnStderr: false

#- bash: curl https://www.mpi-hd.mpg.de/personalhomes/globes/download/globes-3.2.17.tar.gz | tar xvz
#  workingDirectory: $(System.DefaultWorkingDirectory)
#  displayName: download and extract globes library
#  failOnStderr: false

#- bash: ./configure
#  workingDirectory: $(System.DefaultWorkingDirectory)/globes-3.2.17
#  displayName: configure globes library
#  failOnStderr: false

#- bash: sudo make
#  workingDirectory: $(System.DefaultWorkingDirectory)/globes-3.2.17
#  displayName: make globes library
#  failOnStderr: false

#- bash: sudo make install
#  workingDirectory: $(System.DefaultWorkingDirectory)/globes-3.2.17
#  displayName: install globes library
#  failOnStderr: false

#- bash: sudo ldconfig
#  workingDirectory: $(System.DefaultWorkingDirectory)/globes-3.2.17
#  displayName: run ldconfig
#  failOnStderr: false

#- bash: globes-config --include
#  workingDirectory: $(System.DefaultWorkingDirectory)
#  displayName: includes
#  failOnStderr: false

  - bash: python -m pip install --upgrade pip setuptools wheel
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: pip install/upgrade setuptools, wheel
    failOnStderr: false

#- bash: pip install cffi
#  workingDirectory: $(System.DefaultWorkingDirectory)
#  displayName: pip cffi
#  failOnStderr: false

  - bash: ls -la
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: ls
    failOnStderr: false

#- bash: ls
#  workingDirectory: /usr/local/include
#  displayName: ls
#  failOnStderr: false

#- bash: ls
#  workingDirectory: /usr/local/include/globes
#  displayName: ls
#  failOnStderr: false

  - bash: pip install cibuildwheel==0.11.1
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: pip cibuildwheel
    failOnStderr: false

  - bash: cibuildwheel --platform linux --output-dir wheelhouse
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: run cibuildwheel with output ./wheelhouse
    failOnStderr: false

  - bash: ls -la
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: ls
    failOnStderr: false

  - bash: ls -la
    workingDirectory: $(System.DefaultWorkingDirectory)/wheelhouse
    displayName: ls
    failOnStderr: false

  - task: PublishBuildArtifacts@1
    inputs: {pathtoPublish: 'wheelhouse'}

- job: mac
  pool: {vmImage: 'macOS-10.13'}

  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'
    maxParallel: 3

  variables:
    CIBW_SKIP: cp27 cp34
    CIBW_BUILD_VERBOSITY: 3
    CIBW_BEFORE_BUILD: |
      yum install -y gsl-devel && pip install .
      curl https://www.mpi-hd.mpg.de/personalhomes/globes/download/globes-3.2.17.tar.gz | tar xvz
      cd globes-3.2.17
      ./configure
      make
      make install
      ldconfig
      echo $PATH
      globes-config --include
      pip install cffi

  steps:

  - task: UsePythonVersion@0
    displayName: set python version
    inputs:
      versionSpec: '$(python.version)' #'3.x'
      addToPath: true

  - bash: python -m pip install --upgrade pip setuptools wheel
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: pip install/upgrade setuptools, wheel
    failOnStderr: false

  - bash: pip install cibuildwheel==0.11.1
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: pip cibuildwheel
    failOnStderr: false

  - bash: cibuildwheel --platform linux --output-dir wheelhouse
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: run cibuildwheel with output ./wheelhouse
    failOnStderr: false

  - bash: ls -la
    workingDirectory: $(System.DefaultWorkingDirectory)
    displayName: ls
    failOnStderr: false

  - bash: ls -la
    workingDirectory: $(System.DefaultWorkingDirectory)/wheelhouse
    displayName: ls
    failOnStderr: false

  - task: PublishBuildArtifacts@1
    inputs: {pathtoPublish: 'wheelhouse'}
